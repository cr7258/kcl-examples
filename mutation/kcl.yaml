kcl_cli_configs:
  files:
    - ./transformer.k
kcl_options:
  # Follow KRM KCL Spec
  - key: resource_list
    value:
      items:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-deployment
            labels:
              app: nginx
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - name: nginx
                  image: nginx:1.14.2
                  ports:
                  - containerPort: 80
      functionConfig:
        apiVersion: krm.kcl.dev/v1alpha1
        kind: KCLRun
        metadata:
          name: replica-limits
          metadata:
            annotations: 
              krm.kcl.dev/version: 0.0.1
              krm.kcl.dev/type: validation
              documentation: >-
                Requires that objects with the field `spec.replicas` (Deployments,
                ReplicaSets, etc.) specify a number of replicas within defined ranges.
        spec:
          params:
            min_replicas: 0
            max_replicas: 5
            replicas: 4
          source: |
            # Construct resource and params
            resource = option("resource_list")
            items = resource.items
            params = resource.functionConfig.spec.params
            min_replicas: int = params.min_replicas or 0
            max_replicas: int = params.max_replicas or 99999
            # Define the validation function
            validate_replica_limit = lambda item, min, max {
                replicas = item.spec.replicas or 0
                assert min < replicas < max, "The provided number of replicas ${replicas} is not allowed for ${item.kind}: ${item.metadata.name}. Allowed range: ${min} - ${max}"
                item
            }
            # Validate All resource
            [validate_replica_limit(i, min_replicas, max_replicas) for i in items]
